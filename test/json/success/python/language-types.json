{
  "tests": {
    "Date": [
      {
        "description": "Current date",
        "javascript": "new Date()",
        "python": "datetime()",
        "java": "new java.util.Date()",
        "csharp": "DateTime.Now",
        "shell": "new Date()"
      },
      {
        "description": "Date now",
        "javascript": "Date.now()",
        "python": "datetime.utcnow()",
        "java": "new java.util.Date()",
        "csharp": "DateTime.Now",
        "shell": "Date.now()"
      },
      {
        "description": "new Date from year, month and day",
        "javascript": "new Date('Sun, 17 Dec 1995 00:00:00 GMT')",
        "python": "datetime(1995, 12, 17)",
        "java": "new java.util.Date(819158400000L)",
        "csharp": "new DateTime(1995, 12, 17, 0, 0, 0)",
        "shell": "new Date('Sun, 17 Dec 1995 00:00:00 GMT')"
      },
      {
        "description": "new Date from year, month, day, hour and min",
        "javascript": "new Date('Sun, 17 Dec 1995 03:24:00 GMT')",
        "python": "datetime(1995, 12, 17, 3, 24)",
        "java": "new java.util.Date(819170640000L)",
        "csharp": "new DateTime(1995, 12, 17, 3, 24, 0)",
        "shell": "new Date('Sun, 17 Dec 1995 03:24:00 GMT')"
      },
      {
        "description": "new Date from year, month, day, hour, min and sec",
        "javascript": "new Date('Sun, 17 Dec 1995 03:24:55 GMT')",
        "python": "datetime(1995, 12, 17, 3, 24, 55)",
        "java": "new java.util.Date(819170695000L)",
        "csharp": "new DateTime(1995, 12, 17, 3, 24, 55)",
        "shell": "new Date('Sun, 17 Dec 1995 03:24:55 GMT')"
      }
    ],
    "re.compile": [
      {
        "description": "empty regex object",
        "javascript": "RegExp('')",
        "python": "re.compile(r\"(?:)\")",
        "java": "Pattern.compile(\"(?:)\")",
        "csharp": "new Regex(\"(?:)\")",
        "shell": "RegExp('(?:)')"
      },
      {
        "description": "regex object without options",
        "javascript": "RegExp('abc')",
        "python": "re.compile(r\"abc\")",
        "java": "Pattern.compile(\"abc\")",
        "csharp": "new Regex(\"abc\")",
        "shell": "RegExp('abc')"
      },
      {
        "description": "regex object with im flags as args",
        "javascript": "new RegExp('ab+c', 'im')",
        "python": "re.compile(r\"ab+c(?im)\")",
        "java": "Pattern.compile(\"ab+c(?im)\")",
        "csharp": "new Regex(\"(?im)ab+c\")",
        "shell": "new RegExp('ab+c', 'im')"
      },
      {
        "description": "regex object with ig flags as args",
        "javascript": "new RegExp('ab+c', 'ig')",
        "python": "re.compile(r\"ab+c(?is)\")",
        "java": "Pattern.compile(\"ab+c(?i)\")",
        "csharp": "new Regex(\"(?i)ab+c\")",
        "shell": "new RegExp('ab+c', 'gi')"
      },
      {
        "description": "regex object with forward slash",
        "javascript": "new RegExp('ab/cd')",
        "python": "re.compile(r\"ab\\/cd\")",
        "java": "Pattern.compile(\"ab\\\\/cd\")",
        "csharp": "new Regex(\"ab\\/cd\")",
        "shell": "new RegExp('ab\\/cd')"
      },
      {
        "description": "regex object with escaped double quote",
        "javascript": "new RegExp('ab\\\"ab')",
        "python": "re.compile(r\"ab\\\"ab\")",
        "java": "Pattern.compile(\"ab\\\"ab\")",
        "csharp": "new Regex(\"ab\\\"ab\")",
        "shell": "new RegExp('ab\"ab')"
      },
      {
        "description": "regex object with nonescaped double quote",
        "javascript": "new RegExp('ab\"ab')",
        "python": "re.compile(r\"ab\\\"ab\")",
        "java": "Pattern.compile(\"ab\\\"ab\")",
        "csharp": "new Regex(\"ab\\\"ab\")",
        "shell": "new RegExp('ab\"ab')"
      },
      {
        "description": "regex object with escaped single quote",
        "javascript": "new RegExp('ab\\'ab')",
        "python": "re.compile(r\"ab'ab\")",
        "java": "Pattern.compile(\"ab'ab\")",
        "csharp": "new Regex(\"ab'ab\")",
        "shell": "new RegExp('ab\\'ab')"
      },
      {
        "description": "regex object with nonescaped single quote",
        "javascript": "new RegExp(\"ab'ab\")",
        "python": "re.compile(r\"ab'ab\")",
        "java": "Pattern.compile(\"ab'ab\")",
        "csharp": "new Regex(\"ab'ab\")",
        "shell": "new RegExp('ab\\'ab')"
      },
      {
        "description": "regex object with newline",
        "javascript": "new RegExp(\"\\\\n\")",
        "python": "re.compile(r\"\\\\n\")",
        "java": "Pattern.compile(\"\\\\n\")",
        "csharp": "new Regex(\"\\n\")",
        "shell": "new RegExp('\\n')"
      }
    ]
  }
}
