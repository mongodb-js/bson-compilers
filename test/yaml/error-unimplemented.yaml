runner: !!js/function >
    (it, expect, input, output, transpiler, test) => {
        it(`${input}: ${test.input[input]} => ${output}`, () => {
            let thrown = false;
            try {
              transpiler[input][output].compile(test.input[input]);
            } catch (error) {
              thrown = true;
              expect(error.code).to.equal(test.errorCode);
              if (test.message) {
                expect(error.message).to.be.a('string');
                expect(
                  error.message.includes(test.message),
                  `Expected error message to contain ${test.message} but got ${error.message}`
                ).to.be.true;
              }
            } finally {
              if (!thrown) {
                expect.fail(0, 0, `Expected error with code ${test.errorCode} to throw`);
              }
            }
        });
    }
tests:
